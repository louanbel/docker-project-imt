- name: Debug postgresql_mode before including tasks
  debug:
    msg: "postgresql_mode is currently set to {{ postgresql_mode }} for inventory host {{ inventory_hostname }}"

- name: Create replication user
  community.postgresql.postgresql_user:
    db: postgres
    name: replicator
    password: replicator
    role_attr_flags: "replication"
  become: yes
  become_user: postgres

- name: Get hba_file path
  community.postgresql.postgresql_query:
    query: "SHOW hba_file"
  register: hba_file
  become: yes
  become_user: postgres

- name: Show postgresql_primary_ip
  ansible.builtin.debug:
    msg: "The postgresql_primary_ip is {{ postgresql_primary_ip }}"

- name: Grant replication connection to replicator user
  community.postgresql.postgresql_pg_hba:
    dest: "{{ hba_file.query_result[0]['hba_file'] }}"
    contype: host
    users: replicator
    source: 0.0.0.0/0
    databases: replication
    method: md5
    address: "{{ postgresql_primary_ip }}"
  become: yes
  become_user: postgres

- name: Configure PostgreSQL parameters
  community.postgresql.postgresql_set:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  loop:
    - { name: "listen_addresses", value: "0.0.0.0" }
    - { name: "wal_level", value: "replica" }
    - { name: "max_wal_senders", value: "10" }
    - { name: "hot_standby", value: "on" }
    - { name: "wal_keep_size", value: "1GB" }
  become: yes
  become_user: postgres

- name: Restart PostgreSQL
  ansible.builtin.systemd:
    name: postgresql
    state: restarted
  become: yes
  become_user: root

- name: Create .pgpass file
  template:
    src: pgpass_template.j2
    dest: /tmp/.pgpass
    owner: postgres
    group: postgres
    mode: "0600"
  vars:
    USER_REPLICATOR: "replicator"
    PW_REPLICATOR: "replicator"
    IP_PRIMARY: "{{ postgresql_primary_ip }}"

- name: Get data_directory path
  community.postgresql.postgresql_query:
    query: "SHOW data_directory"
  register: data_directory
  become: yes
  become_user: postgres

- name: Stop PostgreSQL
  ansible.builtin.systemd:
    name: postgresql
    state: stopped
  become: yes
  become_user: root

- name: Remove data_directory
  ansible.builtin.file:
    path: "{{ data_directory.query_result[0]['data_directory'] }}"
    state: absent
  become: yes
  become_user: root

- name: Recreate data_directory
  ansible.builtin.file:
    path: "{{ data_directory.query_result[0]['data_directory'] }}"
    state: directory
    owner: postgres
    group: postgres
    mode: "0700"
  become: yes
  become_user: root

- name: Execute pg_basebackup
  ansible.builtin.command: >
    pg_basebackup -R -h "{{ postgresql_primary_ip }}" -U replicator -p 5432 -D {{ data_directory.query_result[0]['data_directory'] }} -X stream
  environment:
    PGPASSFILE: "/tmp/.pgpass"
  become: yes
  become_user: postgres

- name: Remove .pgpass file
  ansible.builtin.file:
    path: /tmp/.pgpass
    state: absent
  become: yes
  become_user: root

- name: Start PostgreSQL
  ansible.builtin.systemd:
    name: postgresql
    state: started
  become: yes
  become_user: root
