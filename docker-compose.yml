services:
  worker:
    build: ./worker
    depends_on:
      - redis
      - postgres
    networks:
      - back-tier
  vote1:
    build: ./vote
    depends_on:
      - redis
    networks:
      - back-tier
      - front-tier
  vote2:
    build: ./vote
    depends_on:
      - redis
    networks:
      - back-tier
      - front-tier
  vote3:
    build: ./vote
    depends_on:
      - redis
    networks:
      - back-tier
      - front-tier
  vote4:
    build: ./vote
    depends_on:
      - redis
    networks:
      - back-tier
      - front-tier
  result:
    build: ./result
    depends_on:
      - postgres
    networks:
      - back-tier
      - front-tier
  nginx:
    build: ./nginx
    depends_on:
      - vote1
      - vote2
      - vote3
      - vote4
    ports:
      - 8000:8000
    networks:
      - front-tier
  seed:
    depends_on:
      - nginx
    build: ./seed-data
    networks:
      - front-tier
  redis:
    image: "redis:alpine"
    networks:
      - back-tier
    healthcheck:
      test: ["CMD", "./healthchecks/redis.sh"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 5s
      start_interval: 5s
  postgres:
    image: "postgres:15-alpine"
    networks:
      - back-tier
    healthcheck:
      test: ["CMD", "./healthchecks/postgres.sh"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 5s
      start_interval: 5s
networks:
  front-tier:
  back-tier:
